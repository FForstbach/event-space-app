
<div class="container" id="newvenue">
  <div class="row">
    <div class="col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3">
    <h2 class="text-center">Create a new venue</h2>

    <%= simple_form_for @venue do |f| %>
      <%= f.input :name %>
      <%= f.input :address %>
      <%= f.input :capacity %>
      <%= f.input :price %>
      <%= f.input :category, collection: [["Conference","conference"],["Bars","bars"],["Clubs","clubs"],["Mixed Usage","mixed_usage"],["Co-Working","coworking"],["Outdoor","outdoor"]] %>
      <%= f.input :city, collection: [["Berlin","berlin"],["Wien","wien"],["Köln","köln"]] %>
      <%= f.input :photo %>
      <%= f.input :photo_cache, as: :hidden %>
      <%= f.submit "Submit Venue", class: "btn-new-venue btn-primary" %>
    <% end %>

    <%= link_to "Back", venues_path, class: "btn-linkback btn-primary" %>

    </div>
  </div>
</div>

<% content_for(:after_js) do %>
  <script type="text/javascript">
    $(document).ready(function() {
      var flat_address = $('#venue_address').get(0);

      if (flat_address) {
        var autocomplete = new google.maps.places.Autocomplete(flat_address, { types: ['geocode'] });
        google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
        google.maps.event.addDomListener(flat_address, 'keydown', function(e) {
          if (e.keyCode == 13) {
            e.preventDefault(); // Do not submit the form on Enter.
          }
        });
      }
    });

    function onPlaceChanged() {
      var place = this.getPlace();
      var components = getAddressComponents(place);

      $('#flat_address').trigger('blur').val(components.address);
      $('#flat_zip_code').val(components.zip_code);
      $('#flat_city').val(components.city);
      if (components.country_code) {
        $('#flat_country').val(components.country_code);
      }
    }

    function getAddressComponents(place) {
      // If you want lat/lng, you can look at:
      // - place.geometry.location.lat()
      // - place.geometry.location.lng()

      var street_number = null;
      var route = null;
      var zip_code = null;
      var city = null;
      var country_code = null;
      for (var i in place.address_components) {
        var component = place.address_components[i];
        for (var j in component.types) {
          var type = component.types[j];
          if (type == 'street_number') {
            street_number = component.long_name;
          } else if (type == 'route') {
            route = component.long_name;
          } else if (type == 'postal_code') {
            zip_code = component.long_name;
          } else if (type == 'locality') {
            city = component.long_name;
          } else if (type == 'country') {
            country_code = component.short_name;
          }
        }
      }

      return {
        address: street_number == null ? route : (street_number + ' ' + route),
        zip_code: zip_code,
        city: city,
        country_code: country_code
      };
    }
  </script>
<% end %>
